SyntaxError: positional argument follows keyword argument
>>> Post.objects.get(id=2).postCategory.add(Category.objects.get(id=2))   
>>> Post.objects.get(id=3).postCategory.add(Category.objects.get(id=3))  
>>> Post.objects.get(id=3).postCategory.add(Category.objects.get(id=4)) 
>>> Post.objects
<django.db.models.manager.Manager object at 0x000002DC956D8820>
>>> Post.objects.get(id=3)
<Post: Post object (3)>
>>> Comment.objects.create(commentPost=Post.objects.get(id=1), commentUser=Author.objects.get(id=1).authorUser, text ='anytextbyauthor') 
<Comment: Comment object (1)>
>>> Comment.objects.create(commentPost=Post.objects.get(id=2), commentUser=Author.objects.get(id=1).authorUser, text ='anytextbyauthor') 
<Comment: Comment object (2)>
>>> Comment.objects.create(commentPost=Post.objects.get(id=3), commentUser=Author.objects.get(id=1).authorUser, text ='anytextbyauthor') 
<Comment: Comment object (3)>
>>> Comment.objects.create(commentPost=Post.objects.get(id=4), commentUser=Author.objects.get(id=1).authorUser, text ='anytextbyauthor') 
Traceback (most recent call last):
l\venv\lib\site-packages\django\db\models\query.py", line 650, in get
    raise self.model.DoesNotExist(newsapp.models.Post.DoesNotExist: Post matching query does not exist.
>>> Comment.objects.create(commentPost=Post.objects.get(id=2), commentUser=Author.objects.get(id=1).authorUser, text ='anytextbyauthor')
<Comment: Comment object (4)>>>> Comment.objects.get(id=1).like()
>>> Comment.objects.get(id=1).rating
1
>>> Comment.objects.get(id=2).like() 
>>> Comment.objects.get(id=2).rating 
1
>>> Comment.objects.get(id=2).like() 
>>> Comment.objects.get(id=1).rating 
1
>>> Comment.objects.get(id=2).rating 
2
>>> Comment.objects.get(id=3).like() 
>>> Comment.objects.get(id=3).dislike() 
>>> Comment.objects.get(id=3).rating    
0
>>> Comment.objects.get(id=1).like()    
>>> Comment.objects.get(id=1).like()
>>> Comment.objects.get(id=1).like()
>>> Comment.objects.get(id=1).rating 
4
>>> Comment.objects.get(id=1).dislike() 
>>> Comment.objects.get(id=1).rating    
3
>>> Comment.objects.get(id=2).rating 
2
>>> Comment.objects.get(id=3).rating 
0
>>> Comment.objects.get(id=4).rating 
0
>>> Comment.objects.get(id=4).dislike() 
>>> Comment.objects.get(id=4).dislike()
>>> Comment.objects.get(id=4).rating
-2
>>> a=Author.objects.get(id=1)
>>> a.update_rating()
>>> a.ratingAuthor
3
>>> b=Author.objects.get(id=2)
>>> b.update_rating()
Traceback (most recent call last):
  File "<console>", line 1, in <module>     
  File "C:\Users\dvhme\OneDrive\Рабочий стол\Skillfactory\django_projects\dev_news_portal\NewsPortal\newsapp\models.py", line 12, in update_rating
    pRat += postRat.get('postRating')       
TypeError: unsupported operand type(s) for +=: 'int' and 'NoneType'
>>> a = Author.objects.order_by('-ratingAuthor')[:1]
>>> a.ratingAuthor
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'QuerySet' object has no attribute 'ratingAuthor'
>>> for i in a:
... i.ratingAuthor
  File "<console>", line 2
    i.ratingAuthor
    ^
IndentationError: expected an indented block>>>                
>>> for i in a:
...     i.ratingAuthor
...     i.authorUser.username
... 
3
'Vasya'
>>>                                       
 *  Журнал восстановлен 

PS C:\Users\dvhme\OneDrive\Рабочий стол\Skillfactory\django_projects\dev_news_portal> 
 *  Журнал восстановлен 

PS C:\Users\dvhme\OneDrive\Рабочий стол\Skillfactory\django_projects\dev_news_portal>



Добрый день! С командами разобрался, но этот подвох с файлом с командами, не очень приемлем для меня, работающего человека. Уже начал новый проект из следующего модуля, поэтому команды
по созданию пользователя и автора не сохранились в консоли. Копипастом заниматься не хочу сейчас. Также последние два пункта не смог выполнить, нигде не объяснено как делать, 
ни в скринкасте, ни в модулях.